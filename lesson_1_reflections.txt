How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It points only the lines where changes to the code was made. This way, it saved a lot of time and painstaking effort of manually combing through the entire code.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    We could track the changes made in each history commit so if anything goes wrong, we could always look back to see the exact files and lines that were changed to see if any bugs were introduced.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Git:  pro: more control of organizing and structuring what goes into each commit
    con: can lose uncommitted work if computer crashes for example

    Automatic saving: Pro: less likely to lose work if computer crashes, since your work will probably have been automatically saved at a frequent enough rate.
    Con: Hard to keep track of what changes that can possibly be grouped together. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git  is more for version control of projects (not just individual documents) where as Google Docs (hence the name), is more for individual documents/files.

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here